apiVersion: v1
kind: Service
metadata:
  name: couchbase
  labels:
    app: couchbase
  namespace: ngwsa-performance
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
    - port: 8091
      targetPort: 8091
      protocol: TCP
      name: http
    - port: 8092
      targetPort: 8092
      protocol: TCP
      name: api-port
    - port: 8093
      targetPort: 8093
      protocol: TCP
      name: api-port-2
    - port: 8094
      targetPort: 8094
      protocol: TCP
      name: api-port-3
    - port: 11209
      targetPort: 11209
      protocol: TCP
      name: internal-cluster-port
    - port: 11210
      targetPort: 11210
      protocol: TCP
      name: internal-cluster-port-2
    - port: 11211
      targetPort: 11211
      protocol: TCP
      name: client-interface-proxy
    - port: 18091
      targetPort: 18091
      protocol: TCP
      name: container-port-1
    - port: 18092
      targetPort: 18092
      protocol: TCP
      name: container-port-2
    - port: 18093
      targetPort: 18093
      protocol: TCP
      name: container-port-3
  selector:
    app: couchbase
  # a headless service is used to manage the DNS entires for each pet. entries are: stateset-#.servicename
  clusterIP: None
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: couchbase-stateset
  labels:
    stateset: couchbase-stateset
    app: couchbase
  namespace: ngwsa-performance
spec:
  # serviceName needs to match the headless service
  serviceName: "couchbase"
  replicas: 2
  selector:
    matchLabels:
      stateset: couchbase-stateset
  template:
    metadata:
      labels:
        stateset: couchbase-stateset
        app: couchbase
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.alpha.kubernetes.io/init-containers: '[
            {
                "name": "bootstrap",
                "image": "cloudssky/couchbase:mytag",
                "args": ["--work-dir=/work-dir"],
                "env": [
                  {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                          "fieldRef": {
                              "apiVersion": "v1",
                              "fieldPath": "metadata.namespace"
                          }
                      }
                   }
                ],
                "volumeMounts": [
                    {
                        "name": "workdir",
                        "mountPath": "/work-dir"
                    }
                ]
            }
        ]'
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: couchbase
          image: couchbase:community
          # export ports from dockerfile
          ports:
            - containerPort: 8091
            - containerPort: 8092
            - containerPort: 8093
            - containerPort: 8094
            - containerPort: 11209
            - containerPort: 11210
            - containerPort: 11211
            - containerPort: 18091
            - containerPort: 18092
            - containerPort: 18093
          command:
            - "/work-dir/bootstrap.sh"
            - "--config-dir=/config"
            - "--secrets-dir=/secrets"
          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 2000m
              memory: 4096Mi
          volumeMounts:
            - name: couchbase-secrets-volume
              mountPath: /secrets
            - name: couchbase-config-volume
              mountPath: /config
            - name: workdir
              mountPath: /work-dir
      volumes:
        - secret:
            secretName: couchbase-secrets
          name: couchbase-secrets-volume
        - configMap:
            name: couchbase-config
          name: couchbase-config-volume
        - emptyDir: {}
          name: workdir
